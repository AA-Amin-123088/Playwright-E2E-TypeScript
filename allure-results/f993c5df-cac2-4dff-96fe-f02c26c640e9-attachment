# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Add Product E2E Test
- Location: D:\PlayrightE2E\tests\003Product.spec.ts:5:5

# Error details

```
TimeoutError: page.goto: Timeout 60000ms exceeded.
Call log:
  - navigating to "https://automationexercise.com/", waiting until "load"

    at D:\PlayrightE2E\tests\003Product.spec.ts:6:14
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | const delay = (ms: number | undefined) => new Promise(resolve => setTimeout(resolve, ms));
   3 | import { faker } from '@faker-js/faker';
   4 | const randomEmail = faker.internet.email();
   5 | test('Add Product E2E Test',async({page}) => {
>  6 |   await page.goto('https://automationexercise.com/');
     |              ^ TimeoutError: page.goto: Timeout 60000ms exceeded.
   7 |   await expect(page.locator("//a[normalize-space()='Home']")).toHaveText("Home")
   8 |   await page.locator("//div[@class='col-sm-9 padding-right']//div[2]//div[1]//div[2]//ul[1]//li[1]//a[1]").click();
   9 |   await page.locator("//button[normalize-space()='Add to cart']").click();
  10 |   await page.locator("//u[normalize-space()='View Cart']").click();
  11 |   await page.locator("//a[normalize-space()='Proceed To Checkout']").click();
  12 |   await page.locator("//u[normalize-space()='Register / Login']").click();
  13 |   await page.locator('//*[@id=\"form\"]/div/div/div[3]/div/form/input[2]').fill('tania');
  14 |   await page.locator("//*[@id=\"form\"]/div/div/div[3]/div/form/input[3]").fill(randomEmail);
  15 |   await page.locator("//*[@id=\"form\"]/div/div/div[3]/div/form/button").click();
  16 |   await page.locator("//*[@id=\"id_gender1\"]").check();
  17 |   await page.locator("//*[@id=\"password\"]").fill('34567890');
  18 |   await page.locator('#days').selectOption('14');
  19 |   await page.locator('#months').selectOption('7');
  20 |   await page.locator('#years').selectOption('2006');
  21 |   await page.locator("//*[@id=\"newsletter\"]").check();
  22 |   await page.locator("//*[@id=\"optin\"]").check();
  23 |   await page.locator("//*[@id=\"first_name\"]").fill('tania');
  24 |   await page.locator("//*[@id=\"last_name\"]").fill('akter');
  25 |   await page.locator("//*[@id=\"address1\"]").fill('dhaka');
  26 |   await page.locator("//*[@id=\"state\"]").fill("Dhaka");
  27 |   await page.locator("//*[@id=\"city\"]").fill("Khilkhet");
  28 |   await page.locator("//*[@id=\"zipcode\"]").fill("1229");
  29 |   await page.locator("//*[@id=\"mobile_number\"]").fill("01723456721");
  30 |   await page.locator("//*[@id=\"form\"]/div/div/div/div[1]/form/button").click();
  31 |   await expect(page.locator("//b[normalize-space()='Account Created!']")).toHaveText("Account Created!");
  32 |   await page.locator("//*[@id=\"form\"]/div/div/div/div/a").click();
  33 |   await expect(page.locator("//header[@id='header']//li[10]")).toHaveText("Logged in as tania");
  34 |   await page.locator("//a[normalize-space()='Cart']").click();
  35 |   await page.locator("//a[normalize-space()='Proceed To Checkout']").click();
  36 |   await expect(page.locator("//h2[normalize-space()='Address Details']")).toHaveText("Address Details");
  37 |   await expect(page.locator("//h2[normalize-space()='Review Your Order']")).toHaveText("Review Your Order");
  38 |   await page.locator("//textarea[@name='message']").fill("Already order some products");
  39 |   await page.locator("//a[normalize-space()='Place Order']").click();
  40 |   await page.locator('input[name="name_on_card"]').fill('sumon');
  41 |   await page.locator('input[name="card_number"]').fill('4485233521979909');
  42 |   await page.locator("//input[@placeholder='ex. 311']").fill("748");
  43 |   await page.locator("//input[@placeholder='MM']").fill("9");
  44 |   await page.locator("//input[@placeholder='YYYY']").fill("2025");
  45 |   await page.locator("//button[@id='submit']").click();
  46 |   await delay(2000);
  47 |   await expect(page.locator("//p[normalize-space()='Congratulations! Your order has been confirmed!']")).toContainText('Congratulations! Your order has been confirmed!');
  48 | });
```